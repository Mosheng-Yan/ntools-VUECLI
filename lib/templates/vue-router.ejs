import { createRouter, createWebHistory } from 'vue-router'
import type { RouteRecordRaw } from 'vue-router'
import HomeView from '../views/HomeView.vue'

// 默认路由
const defaultRoutes = [
  {
    path: '/',
    name: 'home',
    component: HomeView,
  },
  {
    path: '/about',
    name: 'about',
    // route level code-splitting
    // this generates a separate chunk (About.[hash].js) for this route
    // which is lazy-loaded when the route is visited.
    component: () => import('../views/AboutView.vue'),
  },
]

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes: [],
})

for (const route of defaultRoutes) {
  router.addRoute(route)
}

// 自动化路由
const viewComps = import.meta.glob('../views/*/**/*.vue')
const comps = Object.values(viewComps)

const metas = import.meta.glob('../views/**/*.meta.ts', {
  eager: true,
  import: 'default',
})

let currentIndex = -1
const autoRoutes = Object.entries(metas).map(([path, meta]) => {
  path = ('/' + path.split('/').pop()?.replace('.meta.ts', '')) as string
  const name = path.split('/').filter(Boolean).join('-')
  currentIndex++

  return {
    path,
    name,
    component: comps[currentIndex],
    meta,
  }
})

for (const route of autoRoutes) {
  router.addRoute(route as RouteRecordRaw)
}

export default router
